==185440== Memcheck, a memory error detector
==185440== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==185440== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==185440== Command: ./cub3D maps/map_amaze.cub
==185440== Parent PID: 183344
==185440== 
==185440== Conditional jump or move depends on uninitialised value(s)
==185440==    at 0x1186C6: clr_legend_strct (t_ref_extend.c:98)
==185440==    by 0x10F136: main (main.c:87)
==185440== 
==185440== Invalid read of size 8
==185440==    at 0x11836A: pset_flush (t_ref_extend.c:22)
==185440==    by 0x1186E3: clr_legend_strct (t_ref_extend.c:108)
==185440==    by 0x10F136: main (main.c:87)
==185440==  Address 0x4ebcad0 is 32 bytes before a block of size 288 in arena "client"
==185440== 
==185440== Invalid read of size 8
==185440==    at 0x118486: dual_flush (t_ref_extend.c:49)
==185440==    by 0x118708: clr_legend_strct (t_ref_extend.c:112)
==185440==    by 0x10F136: main (main.c:87)
==185440==  Address 0x4bc7b10 is 16 bytes after a block of size 64 alloc'd
==185440==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==185440==    by 0x11821E: e_list_txtr (t_ref_name.c:122)
==185440==    by 0x1179E3: tex_parse (tex_parse.c:74)
==185440==    by 0x1157F6: map_checker (t_map_parse.c:113)
==185440==    by 0x10EFD8: main (main.c:72)
==185440== 
==185440== Conditional jump or move depends on uninitialised value(s)
==185440==    at 0x1185C0: objx_flush (t_ref_extend.c:77)
==185440==    by 0x118724: clr_legend_strct (t_ref_extend.c:114)
==185440==    by 0x10F136: main (main.c:87)
==185440== 
==185440== 
==185440== Process terminating with default action of signal 2 (SIGINT)
==185440==    at 0x118649: clr_legend_strct (t_ref_extend.c:100)
==185440==    by 0x10ED34: cub_clear (main.c:27)
==185440==    by 0x10F14A: main (main.c:88)
==185440== 
==185440== HEAP SUMMARY:
==185440==     in use at exit: 131,893,090 bytes in 1,760 blocks
==185440==   total heap usage: 59,362 allocs, 57,602 frees, 613,165,226 bytes allocated
==185440== 
==185440== LEAK SUMMARY:
==185440==    definitely lost: 766 bytes in 32 blocks
==185440==    indirectly lost: 25,536 bytes in 12 blocks
==185440==      possibly lost: 10,403,432 bytes in 523 blocks
==185440==    still reachable: 121,463,356 bytes in 1,193 blocks
==185440==         suppressed: 0 bytes in 0 blocks
==185440== Rerun with --leak-check=full to see details of leaked memory
==185440== 
==185440== Use --track-origins=yes to see where uninitialised values come from
==185440== For lists of detected and suppressed errors, rerun with: -s
==185440== ERROR SUMMARY: 4 errors from 4 contexts (suppressed: 0 from 0)
